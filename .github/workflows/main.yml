name: Deploy

on: 
  workflow_dispatch: 

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHubActionsSession
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: cache
        uses: actions/cache@4.1.2
        with: 
          path: |
            **/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Terraform Cache
        uses: actions/cache@4.1.2
        with: 
          path: |
            **/.terraform
            *.tfstate
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}
          
          
      - name: Install Dependencies
        run: |
          cd ./my-app
          npm install

      - name: Build Next.js App
        run: |
          cd ./my-app
          npm run build

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3

      - name: Terraform Init
        run: |
          cd ./terraform-config
          terraform init

      - name: Terraform 
        run: |
          cd ./terraform-config
          Terraform plan -out=tfplan

      - name: Terraform Apply
        run: |
          cd ./terraform-config
          terraform apply-auto-approve tfplan 

      - name: Upload to s3
        run: aws s3 sync ./my-app/out s3://${{ steps.terraform.outputs.s3_bucket_name.value }} --delete

      - name: Invalidate CloudFront Cache
        run: |
          DISTRIBUTION_ID=$(terraform output -raw cloudfront_distribution_id)
          aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"
